/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ifs.action;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.LifecycleManager;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.ifs.action//BaseAction//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "BaseActionTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "output", openAtStartup = true)
@ActionID(category = "Window", id = "com.ifs.action.BaseActionTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_BaseActionAction",
        preferredID = "BaseActionTopComponent"
)
@Messages({
   "CTL_BaseActionAction=BaseAction",
   "CTL_BaseActionTopComponent=BaseAction Window",
   "HINT_BaseActionTopComponent=This is a BaseAction window"
})
public final class BaseActionTopComponent extends TopComponent {

   public BaseActionTopComponent() {
      initComponents();
      overrideInit();
      setName(Bundle.CTL_BaseActionTopComponent());
      setToolTipText(Bundle.HINT_BaseActionTopComponent());
      putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);

   }

   /**
    * This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jPanel1 = new javax.swing.JPanel();
      superExitButton = new javax.swing.JButton();
      infoLabel = new javax.swing.JLabel();

      org.openide.awt.Mnemonics.setLocalizedText(superExitButton, org.openide.util.NbBundle.getMessage(BaseActionTopComponent.class, "BaseActionTopComponent.superExitButton.text")); // NOI18N
      superExitButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            superExitButtonActionPerformed(evt);
         }
      });

      org.openide.awt.Mnemonics.setLocalizedText(infoLabel, org.openide.util.NbBundle.getMessage(BaseActionTopComponent.class, "BaseActionTopComponent.infoLabel.text")); // NOI18N

      javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
      jPanel1.setLayout(jPanel1Layout);
      jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(superExitButton)
               .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(265, Short.MAX_VALUE))
      );
      jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(4, 4, 4)
            .addComponent(superExitButton)
            .addContainerGap(217, Short.MAX_VALUE))
      );

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
      );
   }// </editor-fold>//GEN-END:initComponents

   private void superExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superExitButtonActionPerformed
      LifecycleManager.getDefault().saveAll();
      LifecycleManager.getDefault().exit();
   }//GEN-LAST:event_superExitButtonActionPerformed

   private void overrideInit(){
      infoLabel.setText("@author satrlk");
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private static javax.swing.JLabel infoLabel;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JButton superExitButton;
   // End of variables declaration//GEN-END:variables
   @Override
   public void componentOpened() {
      // TODO add custom code on component opening
   }

   @Override
   public void componentClosed() {
      // TODO add custom code on component closing
   }

   void writeProperties(java.util.Properties p) {
      // better to version settings since initial version as advocated at
      // http://wiki.apidesign.org/wiki/PropertyFiles
      p.setProperty("version", "1.0");
      // TODO store your settings
   }

   void readProperties(java.util.Properties p) {
      String version = p.getProperty("version");
      // TODO read your settings according to their version
   }
}
